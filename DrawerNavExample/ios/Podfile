# React Native 0.71 Podfile (adjusted)
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'
prepare_react_native_project!

# Disable Flipper unless you explicitly need it (keeps install simpler)
flipper_config = FlipperConfiguration.disabled

target 'DrawerNavExample' do
  config = use_native_modules!
  flags  = get_default_flags()

  # Optional local fallback for boost if node_modules spec is missing
  local_boost_podspec = File.join(__dir__, 'third-party-podspecs', 'boost.podspec')
  rn_boost_podspec    = File.join(__dir__, '..', 'node_modules', 'react-native', 'third-party-podspecs', 'boost.podspec')
  unless File.exist?(rn_boost_podspec)
    pod 'boost', :path => local_boost_podspec
    puts "[Podfile] Using local third-party-podspecs/boost.podspec"
  end

  use_react_native!(
    :path                  => config[:reactNativePath],
    :new_arch_enabled      => false,
    :hermes_enabled        => flags[:hermes_enabled],
    :flipper_configuration => flipper_config,
    :app_path              => "#{Pod::Config.instance.installation_root}/.."
  )

  # (Removed) Manual 'React-RCTFabric' line â€“ not needed with new arch disabled.

  target 'DrawerNavExampleTests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )

    # Uniformly bump every pod's IPHONEOS_DEPLOYMENT_TARGET and add Boost macro.
    installer.pods_project.targets.each do |t|
      t.build_configurations.each do |cfg|
        if cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 12.4
          cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
        end
        defs = cfg.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        unless defs.any? { |d| d.to_s.include?('BOOST_NO_CXX98_FUNCTION_BASE') }
          defs << 'BOOST_NO_CXX98_FUNCTION_BASE=1'
        end
      end
    end

    # Run Folly Time.h patch (idempotent)
    system("node #{File.join(__dir__, '..', 'scripts', 'patch-folly-time.js')}") or
      puts "[PostInstall] Warning: Folly Time.h patch script failed (continuing)"

    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end